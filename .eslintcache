[{"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\pages\\RegisterPage.js":"1","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\user\\UserForm.js":"2","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\pages\\LoginPage.js":"3","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\reportWebVitals.js":"4","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\App.js":"5","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\index.js":"6","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\common\\Button.js":"7","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\lib\\styles\\palette.js":"8","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\pages\\HomePage.js":"9","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\common\\Navigator.js":"10","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\user\\UserTemplate.js":"11","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\posts\\postform.js":"12","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\posts\\Postform.js":"13","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\posts\\Postsummary.js":"14","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\user\\Userlist.js":"15","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\user\\AuthRoute.js":"16","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\pages\\PostPage.js":"17","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\pages\\PostWritePage.js":"18"},{"size":320,"mtime":1607353940230,"results":"19","hashOfConfig":"20"},{"size":5827,"mtime":1607979955508,"results":"21","hashOfConfig":"20"},{"size":309,"mtime":1607368038246,"results":"22","hashOfConfig":"20"},{"size":375,"mtime":1607353940230,"results":"23","hashOfConfig":"20"},{"size":1185,"mtime":1607980227075,"results":"24","hashOfConfig":"20"},{"size":719,"mtime":1607789451682,"results":"25","hashOfConfig":"20"},{"size":949,"mtime":1607353940221,"results":"26","hashOfConfig":"20"},{"size":534,"mtime":1607353940226,"results":"27","hashOfConfig":"20"},{"size":394,"mtime":1607860222773,"results":"28","hashOfConfig":"20"},{"size":2365,"mtime":1607980919977,"results":"29","hashOfConfig":"20"},{"size":1128,"mtime":1607353940224,"results":"30","hashOfConfig":"20"},{"size":1401,"mtime":1607715338170,"results":"31","hashOfConfig":"20"},{"size":2985,"mtime":1607972989469,"results":"32","hashOfConfig":"20"},{"size":3884,"mtime":1607981010911,"results":"33","hashOfConfig":"20"},{"size":1255,"mtime":1607971209570,"results":"34","hashOfConfig":"20"},{"size":482,"mtime":1607712347536,"results":"35","hashOfConfig":"20"},{"size":314,"mtime":1607860185469,"results":"36","hashOfConfig":"20"},{"size":289,"mtime":1607860185463,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1t4sjw4",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\pages\\RegisterPage.js",[],["81","82"],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\user\\UserForm.js",["83"],"import React,{useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport { Link,withRouter,useHistory,Redirect } from 'react-router-dom';\r\nimport Button from '../common/Button';\r\nimport axios from 'axios';\r\n\r\nconst textMap = {\r\n    login : '로그인',\r\n    register : '회원가입'\r\n};\r\n\r\nconst UserFormBlock = styled.div`\r\n h3 {\r\n    margin: 0;\r\n    color: ${palette.gray[8]};\r\n    margin-bottom: 1rem;\r\n  }`;\r\nconst StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-bottom: 1px solid ${palette.gray[5]};\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  width: 100%;\r\n  &:focus {\r\n    color: $oc-teal-7;\r\n    border-bottom: 1px solid ${palette.gray[7]};\r\n  }\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\nconst Footer = styled.div`\r\n  margin-top: 2rem;\r\n  text-align: right;\r\n  a {\r\n    color: ${palette.gray[6]};\r\n    text-decoration: underline;\r\n    &:hover {\r\n      color: ${palette.gray[9]};\r\n    }\r\n  }\r\n`;\r\nconst ButtonWithMarginTop = styled(Button)`\r\n    margin-top:1rem;\r\n`;\r\n\r\nconst UserForm = ({type})=>{\r\n    const [userid,setUserid]=useState('');\r\n    const onChangeId=e=>setUserid(e.target.value);\r\n    const [password,setPassword]=useState('');\r\n    const onChangePw=e=>setPassword(e.target.value);\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const onConfirmPasswordHandler = (event) => {\r\n        setConfirmPassword(event.currentTarget.value)\r\n    }\r\n    const [cash,setCash]=useState('');\r\n    const onChangeCash=e=>setCash(e.target.value);\r\n    const history=useHistory();\r\n    const text=textMap[type];\r\n    const [redirect,setRedirect]=useState(false);\r\n\r\n    var handleFormSubmit=()=>{};\r\n\r\n    if(type==='login'){  //for login\r\n    handleFormSubmit=(event)=> {\r\n        event.preventDefault(); // 아무 동작 안하고 버튼만 눌러도 리프레쉬 되는 것을 막는다\r\n        if(!password||!userid){\r\n            return alert('아이디,비밀번호를 모두 입력해주세요')\r\n        }\r\n        axios({\r\n            method: 'post',\r\n            url: 'http://localhost:3001/user/login',\r\n            data: {\r\n                'userid': userid,\r\n                'password': password\r\n            }\r\n        }).then(function (res) {\r\n            if(res.data.success) {\r\n                sessionStorage.setItem('isLogin', true);\r\n                sessionStorage.setItem('userid', userid);\r\n                alert(res.data.msg);\r\n                setRedirect(true);\r\n            }\r\n            else\r\n                alert(res.data.msg);\r\n        }).catch(err => alert(err))\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    }else {    //for register\r\n        handleFormSubmit = (event) => {\r\n\r\n            event.preventDefault(); // 아무 동작 안하고 버튼만 눌러도 리프레쉬 되는 것을 막는다\r\n\r\n            if(password !== confirmPassword){\r\n                return alert('비밀번호와 비밀번호 확인은 같아야 합니다.')\r\n            }\r\n            if(!password||!userid||!cash){\r\n                return alert('공란이 있습니다')\r\n            }\r\n\r\n            axios({\r\n                method:'post',\r\n                url:'http://localhost:3001/user/register',\r\n                data: {\r\n                    'userid': userid,\r\n                    'password': password,\r\n                    'cash':cash\r\n                }\r\n            }).then(function(res){alert(res.data.msg);\r\n            if(res.data.success)history.push('/login');}).catch(err=>alert(err))\r\n        }\r\n    }\r\n    const handleIDSubmit = (event) => {   //id 중복 확인\r\n        event.preventDefault(); // 아무 동작 안하고 버튼만 눌러도 리프레쉬 되는 것을 막는다\r\n\r\n        axios({\r\n            method:'post',\r\n            url:'http://localhost:3001/user/checkid',\r\n            data: {\r\n                'userid': userid,\r\n                'password': password\r\n            }\r\n        }).then(function(res){alert(res.data);}).catch(err=>alert(err))\r\n    }\r\n    return(\r\n        <UserFormBlock>\r\n            <h3>{text}</h3>\r\n            <form onSubmit={handleFormSubmit}>\r\n                <StyledInput\r\n                    autoComplete=\"userid\"\r\n                    type='text'\r\n                    name=\"userid\"\r\n                    placeholder=\"아이디\"\r\n                    value={userid}\r\n                    onChange={onChangeId}\r\n                />\r\n                <StyledInput\r\n                    autoComplete=\"new-password\"\r\n                    name=\"password\"\r\n                    placeholder=\"비밀번호\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={onChangePw}\r\n                />\r\n                {type==='register'&&(\r\n                    <StyledInput\r\n                        autoComplete=\"new-password\"\r\n                        name=\"passwordConfirm\"\r\n                        placeholder=\"비밀번호 확인\"\r\n                        type=\"password\"\r\n                        value={confirmPassword}\r\n                        onChange={onConfirmPasswordHandler}\r\n                    />\r\n                )}\r\n                {type==='register'&&(<StyledInput\r\n                    name=\"cash\"\r\n                    placeholder=\"예수금 입력\"\r\n                    type=\"number\"\r\n                    value={cash}\r\n                    onChange={onChangeCash}\r\n                />)}\r\n                <ButtonWithMarginTop cyan fullWidth>{text}</ButtonWithMarginTop>\r\n\r\n            </form>\r\n            {redirect&&(<Redirect to='/' islogin={true}/>)}\r\n            <Footer>\r\n\r\n                {type==='login'?(<Link to='/register'>회원가입</Link>):\r\n                    (<Link to=\"/login\">로그인</Link>)}\r\n            </Footer>\r\n        </UserFormBlock>\r\n    );\r\n};\r\n\r\nexport default withRouter(UserForm);",["84","85"],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\pages\\LoginPage.js",[],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\reportWebVitals.js",[],["86","87"],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\App.js",[],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\index.js",[],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\common\\Button.js",[],["88","89"],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\lib\\styles\\palette.js",[],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\pages\\HomePage.js",[],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\common\\Navigator.js",[],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\user\\UserTemplate.js",[],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\posts\\postform.js",["90","91","92"],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\posts\\Postform.js",[],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\posts\\Postsummary.js",["93","94"],"import React, {useState,useEffect} from 'react'\r\nimport axios from \"axios\";\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst Postsummary = (username)=> {\r\n    const [profit, setProfit] = useState('');\r\n    const [stocklist, setStocklist] = useState('');\r\n    const [commentlist, setCommentlist] = useState('');\r\n    const [cash, setCash] = useState('');\r\n\r\n    const handlecomment=(event) => {\r\n\r\n        event.preventDefault(); // 아무 동작 안하고 버튼만 눌러도 리프레쉬 되는 것을 막는다\r\n        if(!event.target.comment.value){\r\n            return alert('댓글 공란');\r\n        }\r\n        const date=new Date();\r\n        console.log(sessionStorage.getItem('userid'));\r\n        axios({\r\n            method:'post',\r\n            url:`http://localhost:3001/posts/comment/@${username.username}`,\r\n            data: {\r\n                'writer': sessionStorage.getItem('userid'),\r\n                'comment': event.target.comment.value,\r\n                'year': date.getFullYear(),\r\n                'month': date.getMonth(),\r\n                'date': date.getDate()\r\n            }\r\n        }).then(function(res){alert(res.data.msg);updatecomment();}).catch(err=>alert(err))\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`http://localhost:3001/stock/read/@${username.username}`)\r\n            .then(res => {\r\n                setStocklist(res.data.stocklist);\r\n                setProfit(res.data.profit);\r\n                setCash(res.data.cash);\r\n            })\r\n        axios.get(`http://localhost:3001/posts/comment/read/@${username.username}`)\r\n            .then(res => {\r\n                setCommentlist(res.data.commentlist);\r\n                console.log(res.data.commentlist);\r\n            })\r\n\r\n    }, []);\r\n    const updatecomment=(() => {\r\n        axios.get(`http://localhost:3001/posts/comment/read/@${username.username}`)\r\n            .then(res => {\r\n                setCommentlist(res.data.commentlist);\r\n                console.log(res.data.commentlist);\r\n            })\r\n    });\r\n    let liststock;\r\n    if (stocklist)\r\n    {       liststock=stocklist.map(stock =>\r\n        <tr >\r\n            <td>{stock.stockname}</td>\r\n            <td>{stock.stockprice}</td>\r\n            <td>{stock.stocknum}</td>\r\n        </tr>\r\n    );\r\n    }\r\n    const option={\r\n        chart:{type:'spline'},\r\n        title:{text:'수익율추이'},\r\n        series:[{data:profit}]\r\n    };\r\n\r\n    let listcomment;\r\n    if (commentlist)\r\n    {       listcomment=commentlist.map(comment =>\r\n        <div id={comment._id}>\r\n            <div className=\"comment-info\">작성자:{comment.writer}   날짜:{comment.date}</div>\r\n            <div className=\"comment-content\">\r\n                {comment.comment}\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <table class=\"pop_table\">\r\n                <caption>자산 평가</caption>\r\n                <thead>\r\n                <tr>\r\n                    <th> 주식 명 </th>\r\n                    <th> 평균 단가 </th>\r\n                    <th> 수량 </th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {liststock}\r\n                </tbody>\r\n            </table>\r\n            <h2>예수금:{cash}</h2>\r\n            <div class={\"profitgraph\"}>\r\n            {(profit==0)?(<div>아직수익이 실현되지 않았습니다.</div>):(<HighchartsReact highcharts={Highcharts} containerProps={{className:\"chart\"}} options={option}/>)}\r\n            </div>\r\n            <hr/>\r\n            <form onSubmit={handlecomment}>\r\n                <textarea name=\"comment\" rows=\"5\"></textarea><br/>\r\n                <button type=\"submit\">댓글 달기</button>\r\n            </form>\r\n            {listcomment}\r\n\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\nexport default Postsummary\r\n\r\n","C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\user\\Userlist.js",[],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\components\\user\\AuthRoute.js",[],["95","96"],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\pages\\PostPage.js",[],"C:\\Users\\jclab\\WebstormProjects\\2020-2WSD\\2020-2WSD\\src\\pages\\PostWritePage.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":119,"column":11,"nodeType":"103","messageId":"104","endLine":119,"endColumn":25},{"ruleId":"97","replacedBy":"105"},{"ruleId":"99","replacedBy":"106"},{"ruleId":"97","replacedBy":"107"},{"ruleId":"99","replacedBy":"108"},{"ruleId":"97","replacedBy":"109"},{"ruleId":"99","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":10,"column":37,"nodeType":"113","messageId":"114","endLine":10,"endColumn":39},{"ruleId":"111","severity":1,"message":"115","line":20,"column":36,"nodeType":"113","messageId":"114","endLine":20,"endColumn":38},{"ruleId":"111","severity":1,"message":"115","line":20,"column":81,"nodeType":"113","messageId":"114","endLine":20,"endColumn":83},{"ruleId":"116","severity":1,"message":"117","line":49,"column":8,"nodeType":"118","endLine":49,"endColumn":10,"suggestions":"119"},{"ruleId":"111","severity":1,"message":"112","line":104,"column":21,"nodeType":"113","messageId":"114","endLine":104,"endColumn":23},{"ruleId":"97","replacedBy":"120"},{"ruleId":"99","replacedBy":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'handleIDSubmit' is assigned a value but never used.","Identifier","unusedVar",["122"],["123"],["122"],["123"],["122"],["123"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'username.username'. Either include it or remove the dependency array.","ArrayExpression",["124"],["122"],["123"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [username.username]",{"range":"127","text":"128"},[1737,1739],"[username.username]"]